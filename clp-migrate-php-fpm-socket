#!/bin/bash

# Log file
LOG_FILE="/var/log/migrate_sockets.log"

# Function to log messages
log_message() {
  echo "$(date +"%Y-%m-%d %H:%M:%S") - $1" | tee -a $LOG_FILE
}

# Function to check command success
check_success() {
  if [[ $? -ne 0 ]]; then
    log_message "$1"
    exit 1
  fi
}

# Get a list of available PHP domains
domains=$(sqlite3 /home/clp/htdocs/app/data/db.sq3 "SELECT id, domain_name, INSTR(vhost_template, 'fastcgi_pass unix') as hasSocket FROM site WHERE type = 'php'")

# Convert the list of domains into an array
readarray -t domain_array <<<"$domains"

# Check if the domain array is empty
if [ -z "$domains" ]; then
  log_message "No PHP sites found on your server."
  exit 1
fi

# Log the start of bulk migration
log_message "Starting bulk migration of PHP domains to Unix sockets"

# Process each domain
for i in "${!domain_array[@]}"; do
  # Parse domain information
  IFS='|' read -ra selected_domain <<< "${domain_array[i]}"
  site_id=${selected_domain[0]}
  domain_name=${selected_domain[1]}
  hasSocket=${selected_domain[2]}

  # Skip domains already using sockets
  if [ "$hasSocket" -ne 0 ]; then
    log_message "Skipping $domain_name: Already using Unix socket"
    continue
  fi

  log_message "----------------------------------------"
  log_message "Migrating domain: $domain_name"

  # Get the PHP version
  php_version=$(sqlite3 /home/clp/htdocs/app/data/db.sq3 "SELECT php_version FROM php_settings WHERE site_id = $site_id")
  check_success "Failed to get PHP version for $domain_name."

  # Load pool configuration content
  pool_config_file="/etc/php/$php_version/fpm/pool.d/$domain_name.conf"
  if [ ! -f "$pool_config_file" ]; then
    log_message "Error: Pool configuration file not found for $domain_name. Skipping."
    continue
  fi

  # Extract user and group values from the pool configuration file
  user=$(awk -F' = ' '/^user/ {print $2}' "$pool_config_file")
  group=$(awk -F' = ' '/^group/ {print $2}' "$pool_config_file")

  sock_path="/var/run/php/${domain_name}.sock"

  # Create a backup of the pool configuration file
  cp "$pool_config_file" "$pool_config_file.bak"

  # Update pool configuration file
  tmp_file=$(mktemp)
  while IFS= read -r line; do
    case "$line" in
      "listen = 127.0.0.1:"*) 
        echo "listen = $sock_path" >> "$tmp_file"
        echo "listen.owner = $user" >> "$tmp_file"
        echo "listen.group = $group" >> "$tmp_file"
        ;;
      "listen.allowed_clients"*|"listen.backlog"*)
        continue
        ;;
      *)
        echo "$line" >> "$tmp_file"
        ;;
    esac
  done < "$pool_config_file"
  mv "$tmp_file" "$pool_config_file"

  log_message "Updated pool configuration in $pool_config_file"

  escaped_sock_path=$(echo $sock_path | sed 's/\//\\\//g')

  # Update vhost template in the database
  vhost_template=$(sqlite3 /home/clp/htdocs/app/data/db.sq3 "SELECT vhost_template FROM site WHERE id = $site_id")
  updated_vhost_template=$(echo "$vhost_template" | sed "s/fastcgi_pass 127.0.0.1:{{php_fpm_port}};/fastcgi_pass unix:$escaped_sock_path;/")
  escaped_string="${updated_vhost_template//\'/\'\'}"
  sqlite3 /home/clp/htdocs/app/data/db.sq3 "UPDATE site SET vhost_template = '$escaped_string' WHERE id = $site_id;"
  check_success "Failed to update site vhost in CloudPanel database for $domain_name."
  log_message "Updated site vhost in CloudPanel database for $domain_name"

  # Update NGINX configuration
  nginx_config_file="/etc/nginx/sites-enabled/$domain_name.conf"
  if [ -f "$nginx_config_file" ]; then
    cp "$nginx_config_file" "$nginx_config_file.bak"
    sed -i "s/fastcgi_pass 127.0.0.1:[0-9]\+;/fastcgi_pass unix:$escaped_sock_path;/" "$nginx_config_file"
    check_success "Failed to update $nginx_config_file"
    log_message "Successfully updated $nginx_config_file for $domain_name"
  else
    log_message "Error: NGINX configuration file $nginx_config_file not found for $domain_name. Skipping."
    continue
  fi

  # Restart services
  systemctl restart "php$php_version-fpm.service"
  check_success "Failed to restart PHP-FPM service for $domain_name."
  log_message "Restarted PHP-FPM service for $domain_name"

  systemctl reload nginx
  check_success "Failed to reload NGINX service for $domain_name."
  log_message "Reloaded NGINX service"

  log_message "Migration completed for $domain_name"
done

log_message "Bulk migration of PHP domains to Unix sockets completed"
